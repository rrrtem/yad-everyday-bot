import { createClient, SupabaseClient } from "https://esm.sh/@supabase/supabase-js@2";
import { findUserByTelegramId, sendDirectMessage } from "./userHandler.ts";
import {
  MSG_CHANGE_MODE_SELECTION,
  MSG_CHANGE_MODE_SUCCESS,
  MSG_CHANGE_MODE_SAME,
  MSG_CHANGE_MODE_NOT_ACTIVE,
  MSG_CHANGE_MODE_ALL_SET,
  AVAILABLE_MODES,
  CALLBACK_CHANGE_MODE_TEXT,
  PUBLIC_REMINDER_THREAD_ID_TEXT
} from "./constants.ts";

const SUPABASE_URL = Deno.env.get("SUPABASE_URL");
const SUPABASE_KEY = Deno.env.get("SUPABASE_SERVICE_ROLE_KEY");
const TELEGRAM_BOT_TOKEN = Deno.env.get("TELEGRAM_BOT_TOKEN");
const TELEGRAM_API = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

if (!SUPABASE_URL || !SUPABASE_KEY || !TELEGRAM_BOT_TOKEN) {
  throw new Error("Missing Supabase or Telegram environment variables for changeModeHandler.");
}

const supabase: SupabaseClient = createClient(SUPABASE_URL, SUPABASE_KEY);

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º—ã (–∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–∏–π)
 */
async function sendModeSelectionMessage(telegramId: number, currentMode: string): Promise<void> {
  try {
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤, –∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–∏–π
    const availableButtons = [];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–¢–µ–∫—Å—Ç—ã" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –Ω–µ "text"
    if (currentMode !== AVAILABLE_MODES.TEXT) {
      availableButtons.push([{ text: "üìù –¢–µ–∫—Å—Ç—ã", callback_data: CALLBACK_CHANGE_MODE_TEXT }]);
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–æ–∫
    if (availableButtons.length === 0) {
      await sendDirectMessage(telegramId, MSG_CHANGE_MODE_ALL_SET);
      return;
    }

    const keyboard = {
      inline_keyboard: availableButtons
    };

    const response = await fetch(`${TELEGRAM_API}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: telegramId,
        text: MSG_CHANGE_MODE_SELECTION,
        parse_mode: "Markdown",
        reply_markup: keyboard
      })
    });

    const result = await response.json();
    if (!result.ok) {
      console.error("Failed to send mode selection message:", result);
      // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –∫–Ω–æ–ø–æ–∫
      await sendDirectMessage(telegramId, MSG_CHANGE_MODE_SELECTION);
    }
  } catch (error) {
    console.error("Error sending mode selection message:", error);
    // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –∫–Ω–æ–ø–æ–∫
    await sendDirectMessage(telegramId, MSG_CHANGE_MODE_SELECTION);
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–ø–∏–∫–µ –¥–ª—è —Ä–µ–∂–∏–º–∞
 */
function getThreadInfo(mode: string): string {
  const threadId = PUBLIC_REMINDER_THREAD_ID_TEXT;
  return `–¢–µ–ø–µ—Ä—å –ø—Ä–∏—Å—ã–ª–∞–π –∞–ø–¥–µ–π—Ç—ã —Å—é–¥–∞: https://t.me/c/2366470605/${threadId}`;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /change_mode
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã –¥–ª—è –≤—ã–±–æ—Ä–∞
 */
export async function handleChangeModeCommand(message: any): Promise<void> {
  // console.log("handleChangeModeCommand called", JSON.stringify(message));

  if (!message || !message.from) {
    // console.log("handleChangeModeCommand: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏");
    return;
  }

  const telegramId = message.from.id;

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –æ–Ω
    const user = await findUserByTelegramId(telegramId);
    
    if (!user) {
      // console.log(`handleChangeModeCommand: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      await sendDirectMessage(telegramId, MSG_CHANGE_MODE_NOT_ACTIVE);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–≤ —á–∞—Ç–µ –∏–ª–∏ –∏–º–µ–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É)
    const isActive = user.in_chat || user.subscription_active || user.subscription_days_left > 0;
    
    if (!isActive) {
      // console.log(`handleChangeModeCommand: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω`);
      await sendDirectMessage(telegramId, MSG_CHANGE_MODE_NOT_ACTIVE);
      return;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ä–µ–∂–∏–º–∞
    // console.log(`handleChangeModeCommand: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramId}, —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: ${user.mode}`);
    await sendModeSelectionMessage(telegramId, user.mode);

  } catch (error) {
    console.error(`handleChangeModeCommand: –æ—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}:`, error);
    await sendDirectMessage(telegramId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback query –¥–ª—è —Å–º–µ–Ω—ã —Ä–µ–∂–∏–º–∞
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
 */
export async function handleChangeModeCallback(callbackQuery: any): Promise<void> {
  // console.log("handleChangeModeCallback called", JSON.stringify(callbackQuery));

  if (!callbackQuery || !callbackQuery.from || !callbackQuery.data) {
    // console.log("handleChangeModeCallback: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –≤ callback");
    return;
  }

  const telegramId = callbackQuery.from.id;
  const callbackData = callbackQuery.data;

  try {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º –∏–∑ callback_data
    let selectedMode: string | null = null;
    
    if (callbackData === CALLBACK_CHANGE_MODE_TEXT) {
      selectedMode = AVAILABLE_MODES.TEXT;
    } else {
      // console.log(`handleChangeModeCallback: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback_data: ${callbackData}`);
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await findUserByTelegramId(telegramId);
    
    if (!user) {
      // console.log(`handleChangeModeCallback: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      await sendDirectMessage(telegramId, MSG_CHANGE_MODE_NOT_ACTIVE);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–±—Ä–∞–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç —Ä–µ–∂–∏–º
    if (user.mode === selectedMode) {
      // console.log(`handleChangeModeCallback: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} —É–∂–µ –≤ —Ä–µ–∂–∏–º–µ ${selectedMode}`);
      await sendDirectMessage(telegramId, MSG_CHANGE_MODE_SAME(selectedMode));
      
      // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
      await fetch(`${TELEGRAM_API}/answerCallbackQuery`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          callback_query_id: callbackQuery.id,
          text: "–≠—Ç–æ—Ç —Ä–µ–∂–∏–º —É–∂–µ –≤—ã–±—Ä–∞–Ω"
        })
      });
      return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∂–∏–º –≤ –ë–î
    const now = new Date().toISOString();
    const { error } = await supabase
      .from("users")
      .update({
        mode: selectedMode,
        mode_changed_at: now,
        updated_at: now
      })
      .eq("telegram_id", telegramId);

    if (error) {
      console.error(`handleChangeModeCallback: –æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –¥–ª—è ${telegramId}:`, error.message);
      await sendDirectMessage(telegramId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ä–µ–∂–∏–º–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      
      // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query —Å –æ—à–∏–±–∫–æ–π
      await fetch(`${TELEGRAM_API}/answerCallbackQuery`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          callback_query_id: callbackQuery.id,
          text: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ä–µ–∂–∏–º–∞",
          show_alert: true
        })
      });
      return;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    const threadInfo = getThreadInfo(selectedMode);
    const successMessage = MSG_CHANGE_MODE_SUCCESS(selectedMode, threadInfo);
    
    await sendDirectMessage(telegramId, successMessage);
    
    // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
    await fetch(`${TELEGRAM_API}/answerCallbackQuery`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        callback_query_id: callbackQuery.id,
        text: `–†–µ–∂–∏–º –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ –¢–µ–∫—Å—Ç—ã!`
      })
    });

    console.log(`handleChangeModeCallback: —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId} –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ ${selectedMode}`);

  } catch (error) {
    console.error(`handleChangeModeCallback: –æ—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}:`, error);
    await sendDirectMessage(telegramId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ä–µ–∂–∏–º–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    
    // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query —Å –æ—à–∏–±–∫–æ–π
    try {
      await fetch(`${TELEGRAM_API}/answerCallbackQuery`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          callback_query_id: callbackQuery.id,
          text: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞",
          show_alert: true
        })
      });
    } catch (callbackError) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ callback query:", callbackError);
    }
  }
}
