/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
 */

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞ –ë–ï–ó –±–∞–Ω–∞ (—á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ)
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å: —Å–Ω–∞—á–∞–ª–∞ –±–∞–Ω–∏—Ç, –∑–∞—Ç–µ–º —Ä–∞–∑–±–∞–Ω–∏–≤–∞–µ—Ç
 */
export async function removeUserFromChatWithoutBan(userId: number, groupChatId: string, telegramBotToken: string): Promise<void> {
  const TELEGRAM_API = `https://api.telegram.org/bot${telegramBotToken}`;
  
  try {
    console.log(`üîÑ –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –∏–∑ —á–∞—Ç–∞ ${groupChatId}...`);
    
    // –®–∞–≥ 1: –ë–∞–Ω–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—ç—Ç–æ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏–∑ —á–∞—Ç–∞)
    const banResponse = await fetch(`${TELEGRAM_API}/banChatMember`, {
      method: "POST", 
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: groupChatId,
        user_id: userId,
        revoke_messages: false // –ù–µ —É–¥–∞–ª—è–µ–º –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      })
    });
    
    if (!banResponse.ok) {
      const banErrorText = await banResponse.text();
      throw new Error(`–û—à–∏–±–∫–∞ –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${banResponse.status} - ${banErrorText}`);
    }
    
    console.log(`‚úÖ –®–∞–≥ 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞–±–∞–Ω–µ–Ω (—É–¥–∞–ª–µ–Ω –∏–∑ —á–∞—Ç–∞)`);
    
    // –®–∞–≥ 2: –†–∞–∑–±–∞–Ω–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ)
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Ä–∞–∑–±–∞–Ω–æ–º –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
    await new Promise(resolve => setTimeout(resolve, 500));
    
    const unbanResponse = await fetch(`${TELEGRAM_API}/unbanChatMember`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: groupChatId,
        user_id: userId,
        only_if_banned: true // –†–∞–∑–±–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–±–∞–Ω–µ–Ω
      })
    });
    
    if (!unbanResponse.ok) {
      const unbanErrorText = await unbanResponse.text();
      console.warn(`‚ö†Ô∏è –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Ä–∞–∑–±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –Ω–µ —É–¥–∞–ª–∞—Å—å: ${unbanResponse.status} - ${unbanErrorText}`);
      
      // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Ä–∞–∑–±–∞–Ω–∞ –±–µ–∑ —Ñ–ª–∞–≥–∞ only_if_banned
      console.log(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Ä–∞–∑–±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}...`);
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      const retryUnbanResponse = await fetch(`${TELEGRAM_API}/unbanChatMember`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: groupChatId,
          user_id: userId
          // –£–±–∏—Ä–∞–µ–º only_if_banned –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
        })
      });
      
      if (!retryUnbanResponse.ok) {
        const retryErrorText = await retryUnbanResponse.text();
        console.error(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –¥–∞–∂–µ –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏: ${retryUnbanResponse.status} - ${retryErrorText}`);
        console.error(`üö® –í–ù–ò–ú–ê–ù–ò–ï: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∑–∞–±–∞–Ω–µ–Ω –∏ –Ω–µ —Å–º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ!`);
      } else {
        console.log(`‚úÖ –®–∞–≥ 2 (–ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞): –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —Ä–∞–∑–±–∞–Ω–µ–Ω (–º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ invite —Å—Å—ã–ª–∫–µ)`);
      }
    } else {
      console.log(`‚úÖ –®–∞–≥ 2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —Ä–∞–∑–±–∞–Ω–µ–Ω (–º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ invite —Å—Å—ã–ª–∫–µ)`);
    }
    
    console.log(`üéØ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —á–∞—Ç–∞ –ë–ï–ó –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –±–∞–Ω–∞`);
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –±–µ–∑ –±–∞–Ω–∞:`, err);
    throw err;
  }
} 